<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.show.showticketingservice.mapper.PerformanceTimeMapper">

    <insert id="insertPerformanceTimes" parameterType="map" useGeneratedKeys="true" keyProperty="performanceTimeRequests.id">
        INSERT INTO performanceTime(performanceId, hallId, startTime, endTime)
        VALUES
        <foreach collection="performanceTimeRequests" item="performanceTimeRequest" separator=",">
            (
            #{performanceId},
            (SELECT hallId FROM performance WHERE id = #{performanceId}),
            #{performanceTimeRequest.startTime},
            #{performanceTimeRequest.endTime}
            )
        </foreach>
    </insert>

    <select id="getPerfTimes" parameterType="map"
            resultType="com.show.showticketingservice.model.performance.PerformanceTimeRequest">
        SELECT id, date_format(startTime, '%Y%m%d%H%i%S'), date_format(endTime, '%Y%m%d%H%i%S')
        FROM performanceTime
        WHERE hallId = (SELECT hallId FROM performance WHERE id = #{performanceId}) AND
        <foreach collection="performanceTimeRequests" item="performanceTimeRequest" open="(" close=")" separator="OR">
            (
            DATE(startTime)
            BETWEEN
            DATE(#{performanceTimeRequest.startTime}) - 1
            AND
            DATE(#{performanceTimeRequest.startTime}) + 1
            )
        </foreach>
    </select>

    <delete id="deletePerformanceTimes" parameterType="map">
        DELETE FROM performanceTime
        WHERE performanceId = #{performanceId}
        AND id IN
        <foreach collection="timeIds" item="timeId" open="(" close=")" separator=",">
            #{timeId}
        </foreach>
    </delete>

    <resultMap id="perfTimeAndSeatCapacityResponse" type="com.show.showticketingservice.model.performance.PerfTimeAndSeatCapacityResponse">
        <result column="startTime" property="startTime"/>
        <result column="perfTimeId" property="perfTimeId"/>
        <collection property="seatCapacityResponses" resultMap="seatCapacityResponse"/>
    </resultMap>

    <resultMap id="seatCapacityResponse" type="com.show.showticketingservice.model.performance.SeatCapacityResponse">
        <result column="ratingType" property="ratingType"/>
        <association property="seatCapacity" column="{ratingType=ratingType, perfTimeId=perfTimeId}" select="getSeatCapacity"/>
    </resultMap>

    <select id="getSeatCapacity" resultType="int">
        SELECT COUNT(s.priceId) AS seatCapacity
        FROM seat s
        INNER JOIN seatPrice sp ON s.priceId = sp.id
        INNER JOIN performanceTime pt ON s.perfTimeId = pt.id
        WHERE sp.ratingType = #{ratingType} AND pt.id = #{perfTimeId} AND s.reserved = false
    </select>

    <select id="getPerfTimeAndSeatCapacity" resultMap="perfTimeAndSeatCapacityResponse" parameterType="map">
        SELECT
            TIME(pt.startTime) AS startTime,
            pt.id AS perfTimeId,
            sp.ratingType AS ratingType
        FROM performanceTime pt
        INNER JOIN seatPrice sp ON pt.performanceId = sp.performanceId
        WHERE pt.performanceId = #{performanceId} AND DATE(pt.startTime) = #{perfDate}
    </select>

    <select id="isPerfDate" resultType="boolean">
        SELECT EXISTS
        (
        SELECT * FROM performanceTime
        WHERE performanceId = #{performanceId} AND DATE(startTime) = #{perfDate}
        )
    </select>

</mapper>
