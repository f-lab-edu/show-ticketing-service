<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.show.showticketingservice.mapper.PerformanceMapper">

    <insert id="insertPerformance" parameterType="com.show.showticketingservice.model.performance.PerformanceRequest">
        INSERT INTO performance(title, detail, ageLimit, showType, venueId, hallId)
        VALUES(#{title}, #{detail}, #{ageLimit}, #{showType}, #{venueId}, #{hallId})
    </insert>

    <select id="isPerformanceExists" parameterType="map" resultType="boolean">
        SELECT EXISTS
        (
        SELECT * FROM performance
        WHERE title = #{title} AND showType = #{showType}
        )
    </select>

    <update id="updatePerfImagePath" parameterType="map">
        UPDATE performance
        SET imageFilePath = #{filePath}
        WHERE id = #{performanceId}
    </update>

    <select id="getImagePath" parameterType="int" resultType="String">
        SELECT imageFilePath
        FROM performance
        WHERE id = #{performanceId}
    </select>

    <select id="isPerformanceIdExists" resultType="boolean">
        SELECT EXISTS
        (
        SELECT * FROM performance
        WHERE id = #{performanceId}
        )
    </select>

    <select id="isPerfTitleDuplicated" parameterType="map" resultType="boolean">
        SELECT EXISTS
        (
        SELECT * FROM performance
        WHERE id != #{performanceId} AND title = #{title} AND showType = #{showType}
        )
    </select>

    <update id="updatePerformanceInfo" parameterType="map">
        UPDATE performance
        SET title = #{perfUpdateRequest.title}, detail = #{perfUpdateRequest.detail},
        ageLimit = #{perfUpdateRequest.ageLimit}, showType = #{perfUpdateRequest.showType}
        WHERE id = #{performanceId}
    </update>

    <delete id="deletePerformance">
        DELETE FROM performance
        WHERE id = #{performanceId}
    </delete>

    <resultMap id="performanceTimeResponse" type="com.show.showticketingservice.model.performance.PerformanceTimeResponse">
        <result column="startTime" property="startTime"/>
        <result column="endTime" property="endTime"/>
    </resultMap>

    <resultMap id="seatPriceResponse" type="com.show.showticketingservice.model.performance.SeatPriceResponse">
        <result column="price" property="price"/>
        <result column="ratingType" property="ratingType"/>
    </resultMap>

    <resultMap id="performanceDetailInfoResponse" type="com.show.showticketingservice.model.performance.PerformanceDetailInfoResponse">
        <result column="title" property="title"/>
        <result column="detail" property="detail"/>
        <result column="ageLimit" property="ageLimit"/>
        <result column="showType" property="showType"/>
        <result column="imageFilePath" property="imageFilePath"/>
        <result column="hallName" property="hallName"/>
        <association property="venueResponse" javaType="com.show.showticketingservice.model.venue.VenueResponse">
            <id column="venueId" property="id"/>
            <result column="venueName" property="name"/>
            <result column="address" property="address"/>
            <result column="tel" property="tel"/>
            <result column="homepage" property="homepage"/>
        </association>
        <collection property="performanceTimeResponses" resultMap="performanceTimeResponse"/>
        <collection property="seatPriceResponses" resultMap="seatPriceResponse"/>
    </resultMap>

    <select id="getPerformanceDetailInfo" resultMap="performanceDetailInfoResponse">
        SELECT
            p.title AS title,
            p.detail AS detail,
            p.ageLimit AS ageLimit,
            p.showType AS showType,
            p.imageFilePath AS imageFilePath,
            pt.startTime AS startTime,
            pt.endTime AS endTime,
            v.id AS venueId,
            v.name AS venueName,
            v.address AS address,
            v.tel AS tel,
            v.homepage AS homepage,
            s.ratingType AS ratingType,
            s.price AS price,
            vh.name AS hallName
        FROM performance p
        LEFT OUTER JOIN performanceTime pt ON p.id = pt.performanceId
        LEFT OUTER JOIN seatPrice s ON p.id = s.performanceId
        INNER JOIN venue v ON p.venueId = v.id
        INNER JOIN venueHall vh ON p.hallId = vh.id
        WHERE p.id = #{performanceId}
    </select>

</mapper>
